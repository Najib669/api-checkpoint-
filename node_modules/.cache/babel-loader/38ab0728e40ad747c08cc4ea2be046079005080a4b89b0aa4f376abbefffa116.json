{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\#21 - API Checkpoint\\\\client\\\\src\\\\Components\\\\App\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport UserList from './../UserList/UserList.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [listOfUSer, setListOfUser] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchItems = async () => {\n      axios(`https://jsonplaceholder.typicode.com/users`).then(result => {\n        setListOfUser(result.data);\n        setIsLoading(false);\n      });\n    };\n    fetchItems();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(UserList, {\n        listOfUSer: listOfUSer,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"W6UF+FVNodg8sm0aDm6lpAmLnNI=\");\n_c = App;\nexport default App;\n{\n  // Create a project using create-react-app.\n  // Create UserList.js file in src folder\n  // Install axios.\n  // You gone to use jsonplaceholder API to get list of user \n  // Use axios to Get data from Link inside useEffect hooks\n  // Use UseState hooks to save data into listOfUSer state \n  // Map listOfUser to display list of user into screen \n  // Style your App as you wish\n}\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","UserList","App","listOfUSer","setListOfUser","isLoading","setIsLoading","fetchItems","then","result","data"],"sources":["C:/Users/hp/Desktop/#21 - API Checkpoint/client/src/Components/App/App.js"],"sourcesContent":["import './App.css';\nimport {useState,useEffect} from 'react';\nimport axios from 'axios';\nimport UserList from './../UserList/UserList.js';\n\nfunction App() {\n\n  const [listOfUSer,setListOfUser] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      axios(`https://jsonplaceholder.typicode.com/users`)\n      .then(result => { setListOfUser(result.data); setIsLoading(false);})\n    }\n    fetchItems();\n  },[]);\n\n\n\n\n  return (\n    <div className=\"App container\">\n\n      <div className=\"row\">\n      <UserList listOfUSer={listOfUSer} isLoading={isLoading} />\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n{\n// Create a project using create-react-app.\n// Create UserList.js file in src folder\n// Install axios.\n// You gone to use jsonplaceholder API to get list of user \n// Use axios to Get data from Link inside useEffect hooks\n// Use UseState hooks to save data into listOfUSer state \n// Map listOfUser to display list of user into screen \n// Style your App as you wish\n}\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAAQA,QAAQ,EAACC,SAAS,QAAO,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,2BAA2B;AAAC;AAEjD,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,UAAU,EAACC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMQ,UAAU,GAAG,YAAY;MAC7BP,KAAK,CAAE,4CAA2C,CAAC,CAClDQ,IAAI,CAACC,MAAM,IAAI;QAAEL,aAAa,CAACK,MAAM,CAACC,IAAI,CAAC;QAAEJ,YAAY,CAAC,KAAK,CAAC;MAAC,CAAC,CAAC;IACtE,CAAC;IACDC,UAAU,EAAE;EACd,CAAC,EAAC,EAAE,CAAC;EAKL,oBACE;IAAK,SAAS,EAAC,eAAe;IAAA,uBAE5B;MAAK,SAAS,EAAC,KAAK;MAAA,uBACpB,QAAC,QAAQ;QAAC,UAAU,EAAEJ,UAAW;QAAC,SAAS,EAAEE;MAAU;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EACpD;IAAA;IAAA;IAAA;EAAA,QAEF;AAEV;AAAC,GAzBQH,GAAG;AAAA,KAAHA,GAAG;AA2BZ,eAAeA,GAAG;AAIlB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAAA;AACC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}